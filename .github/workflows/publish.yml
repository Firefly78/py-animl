# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Deploy Python Package to PYPI
on:
  release:
    types: [published]
permissions:
  contents: read

jobs:
  check:
    name: Only Deploy on Tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
  
  test:
    needs: [check]
    uses: ./.github/workflows/validate.yml
    
  build:
    name: Build and Upload
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Upload Dist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/
        
  deploy:
    name: Publish to PYPI
    runs-on: ubuntu-latest
    needs: [build]

    environment: release
    permissions:
      id-token: write

    steps:
      - name: Download Dist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/
      - name: Publish Package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
